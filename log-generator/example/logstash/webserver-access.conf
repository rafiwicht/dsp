input {
    file {
        path => "/var/log/apache_access.log"
        tags => ["access"]
    }
}
filter {
    if "access" in [tags] {
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
            remove_field => [ "@timestamp", "@version", "ident", "host", "message" ]
        }
        date {
            match => [ "timestamp","d/MMM/yyyy:HH:mm:ss.SSS Z" ]
            target => "timestamp"
        }
        ruby { 
            code => 'event.set( "timestamp", (event.get("timestamp").to_f * 1000).to_i)' 
        }
        mutate {
            rename => { "verb" => "method" }
            rename => { "clientip" => "ip" }
            rename => { "response" => "httpCode" }
            rename => { "auth" => "user" }
            rename => { "request" => "path" }
            rename => { "agent" => "userAgent" }
            rename => { "referrer" => "referer" }
            rename => { "httpversion" => "httpVersion" }
            convert => {
                "bytes" => "integer"
                "httpCode" => "integer"
            }
            gsub => [
            "userAgent", "\"", "",
            "referer", "\"", ""
            ]
        }
    }
    
}
output {
    if "access" in [tags] {
        stdout {
            codec => json
        }
    }
}